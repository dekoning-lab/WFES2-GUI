#ifndef RESULTS_H
#define RESULTS_H

#include <QStandardPaths>
#include <QTextStream>
#include <QDir>

#include <ctime>

#include <boost/math/special_functions/fpclassify.hpp>

#include "utils/types.h"
#include "model/executables/wfes_single/config/configWfesSingle.h"

class ResultsWfesSingle {
    public:

        /**
         * @brief Selected model type.
         */
        wfes::config::ModelTypeWfesSingle modelType;

        /**
         * @brief Probability of extinction.
         */
        double pExt;

        /**
         * @brief Probability of fixation.
         */
        double pFix;

        /**
         * @brief Expected number of generations till absorption.
         */
        double tAbs;

        /**
         * @brief Standard deviation of expected number of generations till absorption.
         */
        double tAbsStd;

        /**
         * @brief Expected number of generations till extinction.
         */
        double tExt;

        /**
         * @brief Standard deviation of expected number of generations till extinction.
         */
        double tExtStd;

        /**
         * @brief Number of generations till extinction.
         */
        double nExt;

        /**
         * @brief Expected number of generations between two fixation events (Fixation mode).
         */
        double tFix;

        /**
         * @brief Standard deviation of expected number of generations between two fixation events (Fixation mode).
         */
        double tFixStd;

        /**
         * @brief Expected number of generations till fixation (Absorption mode).
         */
        double tFixAbsMode;

        /**
         * @brief Standard deviation of expected number of generations till fixation (Absorption mode).
         */
        double tFixStdAbsMode;

        /**
         * @brief Rate of substitution.
         */
        double rate;

        /**
         * @brief Expected frequency.
         */
        double freqMut;

        /**
         * @brief One minus expected frequency.
         */
        double freqWt;

        /**
         * @brief Frequency of establishment.
         */
        double fEst;

        /**
         * @brief Probability of establishment.
         */
        double pEst;

        /**
         * @brief Expected number of generations till segregation.
         */
        double tSeg;

        /**
         * @brief Standard deviation of expected number of generations till segregation.
         */
        double tSegStd;

        /**
         * @brief Expected number of generations till segregation (Extinction).
         */
        double tSegExt;

        /**
         * @brief Standard deviation of expected number of generations till segregation (Extinction).
         */
        double tSegExtStd;

        /**
         * @brief Expected number of generations till segregation (Fixation).
         */
        double tSegFix;

        /**
         * @brief Standard deviation of expected number of generations till segregation (Fixation).
         */
        double tSegFixStd;

        /**
         * @brief Expected number of generations till establishment.
         */
        double tEst;

        /**
         * @brief Standard deviation of expected number of generations till establishment.
         */
        double tEstStd;

        /**
         * @brief Expectation of the allele age
         */
        double eAlleleAge;

        /**
         * @brief Standard deviation of the allele age
         */
        double sAlleleAge;

        /**
         * @brief Execution time.
         */
        double time;

        /**
         * @brief String containing possible errors during execution.
         * This is later shown to the user in a MessageDialog.
         */
        std::string error;

        /**
         * @brief Empty constructor of ResultsWfesSingle.
         */
        ResultsWfesSingle();

        /**
         * @brief Constructor of ResultsWfesSingle with execution time.
         * @param time Execution time.
         */
        ResultsWfesSingle(double time);

        /**
         * @brief Constructor of ResultsWfesSingle when an error happens during execution.
         * @param error Description of the error or message generated by the error.
         */
        ResultsWfesSingle(std::string error);

        /**
         * @brief Constructor of wfes single with absorption mode.
         * @param modelType Selected model type.
         * @param pExt Probability of extinction.
         * @param pFix Probability of fixation.
         * @param tAbs Expected number of generations till absorption.
         * @param tAbsStd Standard deviation of expected number of generations till absorption.
         * @param tExt Expected number of generations till extinction.
         * @param tExtStd Standard deviation of expected number of generations till extinction.
         * @param nExt Number of generations till extinction.
         * @param tFixAbsMode Expected number of generations till fixation (Absorption mode).
         * @param tFixStdAbsMode Standard deviation of expected number of generations till fixation (Absorption mode).
         * @param time Execution time.
         */
        ResultsWfesSingle(wfes::config::ModelTypeWfesSingle modelType, double pExt,
                double pFix, double tAbs, double tAbsStd, double tExt,
                double tExtStd, double nExt, double tFixAbsMode, double tFixStdAbsMode, double time);

        /**
         * @brief Constructor of wfes single with fixation mode.
         * @param modelType Selected model type.
         * @param tFix Expected number of generations between two fixation events (Fixation mode).
         * @param tFixStd Standard deviation of expected number of generations between two fixation events (Fixation mode).
         * @param rate Rate of substitution.
         * @param time Execution time.
         */
        ResultsWfesSingle(wfes::config::ModelTypeWfesSingle modelType, double tFix, double tFixStd, double rate, double time);

        /**
         * @brief Constructor of wfes single with fundamental mode.
         * @param modelType Selected model type.
         * @param time Execution time.
         */
        ResultsWfesSingle(wfes::config::ModelTypeWfesSingle modelType, double time);

        /**
         * @brief Constructor of wfes single with equilibrium mode.
         * @param modelType Selected model type.
         * @param freqMut Expected frequency.
         * @param freqWt 1 - expected frequency.
         * @param time Execution time.
         */
        ResultsWfesSingle(wfes::config::ModelTypeWfesSingle modelType, double freqMut, double freqWt, double time);

        /**
         * @brief ResultsWfesSingle Constructor of wfes single with establishment mode.
         * @param modelType Selected model type.
         * @param fEst Frequency of establishment.
         * @param pEst Probability of establishment.
         * @param tSeg Expected number of generations till segregation.
         * @param tSegStd Standard deviation of expected number of generations till segregation.
         * @param tSegExt Expected number of generations till segregation (Extinction).
         * @param tSegExtStd Standard deviation of expected number of generations till segregation (Extinction).
         * @param tSegFix Expected number of generations till segregation (Fixation).
         * @param tSegFixStd Standard deviation of expected number of generations till segregation (Fixation).
         * @param tEst Expected number of generations till establishment.
         * @param tEstStd Standard deviation of expected number of generations till establishment.
         * @param time Execution time.
         */
        ResultsWfesSingle(wfes::config::ModelTypeWfesSingle modelType, double fEst, double pEst, double tSeg, double tSegStd,
                double tSegExt, double tSegExtStd, double tSegFix,
                double tSegFixStd, double tEst, double tEstStd, double time);

        /**
         * @brief ResultsWfesSingle Constructor of wfes single with allele age mode.
         * @param modelType Selected model type.
         * @param eAlleleAge Expectation of the allele age
         * @param sAlleleAge Standard deviation of the allele age
         * @param alelle Allele mode. Not used.
         * @param time Execution time.
         */
        ResultsWfesSingle(wfes::config::ModelTypeWfesSingle modelType, double eAlleleAge, double sAlleleAge, bool alelle, double time);

        /**
         * @brief  ResultsWfesSingle Constructor of wfes single with non absorbing mode.
         * @param modelType Selected model type.
         * @param nonAbsorbing Non absorbing mode. Not used.
         * @param time Execution time.
         */
        ResultsWfesSingle(wfes::config::ModelTypeWfesSingle modelType, bool nonAbsorbing, double time);

        /**
         * @brief Write results in a CSV file.
         * @param results results to be printed in a CSV file.
         * @param name Name of the file.
         */
        void writeResultsToFile(ResultsWfesSingle *results, std::string name);

};

#endif // RESULTS_H
