#ifndef RESULTSWFESSWITCHING_H
#define RESULTSWFESSWITCHING_H

#include <QStandardPaths>
#include <QTextStream>
#include <QDir>

#include <ctime>

#include <boost/math/special_functions/fpclassify.hpp>

#include "utils/types.h"

#include <model/executables/wfes_switching/config/configWfesSwitching.h>

/**
 * @brief The ResultsWfesSwitching class encapsulates the results generated by an
 * execution of wfes switching.
 */
class ResultsWfesSwitching {
    public:
        /**
         * @brief Probability of extinction.
         */
        double pExt;

        /**
         * @brief Probability of fixation.
         */
        double pFix;

        /**
         * @brief Expected number of generations till extinction.
         */
        double tExt;

        /**
         * @brief Standard deviation of expected number of generations till extinction.
         */
        double tExtStd;

        /**
         * @brief Expected number of generations between two fixation events.
         */
        double tFix;

        /**
         * @brief Standard deviation of expected number of generations between two fixation events.
         */
        double tFixStd;

        /**
         * @brief Rate of substitution.
         */
        double rate;

        /**
         * @brief Conditional probability of extinction.
         */
        dvec pCondExt;

        /**
         * @brief Conditional probability of fixation.
         */
        dvec pCondFix;

        /**
         * @brief Unconditional epected number of generations between two absorption events.
         */
        dvec tUncond;

        /**
         * @brief Unconditional epected number of generations between two extinction events.
         */
        dvec tCondExt;

        /**
         * @brief Unconditional epected number of generations between two fixation events.
         */
        dvec tCondFix;

        /**
         * @brief Execution time.
         */
        double time;

        /**
         * @brief String containing possible errors during execution.
         * This is later shown to the user in a MessageDialog.
         */
        std::string error;

        /**
         * @brief Empty constructor of ResultsWfesSwitching.
         */
        ResultsWfesSwitching();

        /**
         * @brief Constructor of ResultsWfesSwitching with execution time.
         * @param time Execution time.
         */
        ResultsWfesSwitching(double time);

        /**
         * @brief Constructor of ResultsWfesSwitching when an error happens during execution.
         * @param error Description of the error or message generated by the error.
         */
        ResultsWfesSwitching(std::string error);

        /**
         * @brief Constructor of wfes switching with fixation mode.
         * @param tFix Expected number of generations till fixation.
         * @param rate Rate of substitution.
         * @param time Execution time.
         */
        ResultsWfesSwitching(double tFix, double rate, double time);

        /**
         * @brief Constructor of wfes switching with absorption mode.
         * @param pExt Probability of extinction.
         * @param pFix Probability of fixation.
         * @param tExt Expected number of generations till extinction.
         * @param tExtStd Standard deviation of expected number of generations till extinction.
         * @param tFix Expected number of generations between two fixation events.
         * @param tFixStd Standard deviation of expected number of generations between two fixation events.
         * @param pCondExt Conditional probability of extinction.
         * @param pCondFix  Conditional probability of fixation.
         * @param tUncond Unconditional epected number of generations between two absorption events.
         * @param tCondExt Unconditional epected number of generations between two extinction events.
         * @param tCondFix Unconditional epected number of generations between two fixation events.
         * @param time Execution time.
         */
        ResultsWfesSwitching(double pExt, double pFix, double tExt, double tExtStd, double tFix, double tFixStd, dvec pCondExt, dvec pCondFix, dvec tUncond, dvec tCondExt, dvec tCondFix, double time);

        /**
         * @brief Write results in a CSV file.
         * @param results results to be printed in a CSV file.
         * @param name Name of the file.
         */
        void writeResultsToFile(ResultsWfesSwitching *results, std::string name);

};

#endif // RESULTSWFESSWITCHING_H
